pipeline {
    agent {
        kubernetes {
            yaml """
            apiVersion: v1
            kind: Pod
            metadata:
              labels:
                app: jenkins-agent-secure
            spec:
              containers:
              - name: jnlp
                image: jenkins/inbound-agent:latest
                workingDir: /home/jenkins/agent
              - name: snyk
                image: python:3.9-slim
                command: ["/bin/sh", "-c"]
                args: ["sleep infinity"]
                tty: true
                workingDir: /home/jenkins/agent
                volumeMounts:
                  - name: workspace
                    mountPath: /home/jenkins/agent
              volumes:
                - name: workspace
                  emptyDir: {}
"""
        }
    }
   
    environment {
        INSECURE_TEMPLATE = 'insecure-template.yaml'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                echo "chechout respository for insecure template"
                sh '''
                    echo "üì• repo content:"
                    ls -la
                '''
            }
        }

        stage('Validate Secure Template') {
            steps {
                script {
                    if (!fileExists(env.INSECURE_TEMPLATE)) {
                    error("‚ùå Secure template ${env.INSECURE_TEMPLATE} not found in repository")
                    }
                     echo "‚úÖ Secure template found: ${env.INSECURE_TEMPLATE}"
                }
            }
        }
        stage('Install snyk') {
            steps {
                script {
                    sh '''
                        
                    echo "=== Installing Snyk CLI (binary) ===" 
                    curl -L https://static.snyk.io/cli/latest/snyk-linux -o snyk
                    chmod +x snyk
                    export PATH=$PATH:$(pwd)
                    ./snyk --version
                    echo "snyk cli installed completely"
                    '''
                }
            }
        }    
        

        stage('Snyk Security Scan and Monitor') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'mtf-pm-snyk-token', variable: 'SNYK_TOKEN')]) {
                        echo "üîç Starting Snyk security scan for SECURE template"
                       
                        sh'''
                            ./snyk auth "$SNYK_TOKEN"
                            echo "Authenticated with Snyk successfully"
                           
                            echo "Scanning ${INSECURE_TEMPLATE} for security vulnerabilities..."
                            ./snyk iac test ${INSECURE_TEMPLATE} --report --severity-threshold=low --json-file-output=insecure-report.json || true
                            ./snyk iac test ${INSECURE_TEMPLATE} --report --sarif-file-output=secure-report.sarif || true
                            ./snyk monitor ${INSECURE_TEMPLATE} --project-name="mtf-pm-cfn-insecure-template" || true
                        '''
                    }
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'insecure-template-report.*', allowEmptyArchive: true
                }
            }
        }
    }

    post {
        success {
            echo "SUCCESS: inSecure template pipeline completed successfully"
            echo "No high-severity security vulnerabilities found"
            echo "Security reports have been archived"
        }
        failure {
            echo "FAILURE: inSecure template pipeline failed"
            echo "This indicates the secure template may have security issues that need attention"
        }
    }
}
