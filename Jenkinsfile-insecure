pipeline {
    agent {
        kubernetes {
            yaml """
            apiVersion: v1
            kind: Pod
            metadata:
              labels:
                app: jenkins-agent
            spec:
              containers:
              - name: jnlp
                image: jenkins/inbound-agent:latest
                workingDir: /home/jenkins/agent
              - name: snyk
                image: snyk/snyk:docker
                command: ["/bin/sh", "-c"]
                args: ["sleep infinity"]
                workingDir: /home/jenkins/agent
                volumeMounts:
                  - name: workspace
                    mountPath: /home/jenkins/agent
              volumes:
                - name: workspace
                  emptyDir: {}
"""
        }
    }
   
    environment {
        INSECURE_TEMPLATE = 'insecure-template.yaml'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Validate Template') {
            steps {
                script {
                    if (!fileExists(env.INSECURE_TEMPLATE)) {
                        error("‚ùå Template ${env.INSECURE_TEMPLATE} not found in repository")
                    }
                }
            }
        }

        stage('Scan & Enforce Failure') {
            steps {
                container('snyk') {
                    script {
                        withCredentials([string(credentialsId: 'mtf-pm-snyk-token', variable: 'SNYK_TOKEN')]) {
                            echo "üîç Starting Snyk security scan for INSECURE template"
                       
                            sh """
                               snyk auth $SNYK_TOKEN
                               echo "Authenticated with Snyk successfully"
                           
                               echo "Scanning ${env.INSECURE_TEMPLATE} for security vulnerabilities..."
                               snyk iac test ${env.INSECURE_TEMPLATE} --severity-threshold=low
                            """
                        }
                    }
                }
            }
        }

        stage('Generate Reports') {
            steps {
                container('snyk') {
                    script {
                        withCredentials([string(credentialsId: 'mtf-pm-snyk-token', variable: 'SNYK_TOKEN')]) {
                            sh """
                                snyk auth $SNYK_TOKEN
                                snyk iac test ${env.INSECURE_TEMPLATE} --json-file-output=insecure-report.json
                                snyk iac test ${env.INSECURE_TEMPLATE} --sarif-file-output=insecure-report.sarif
                            """
                        }
                    }      
                }
            }
        }

        stage('Monitor in Snyk') {
            steps {
                container('snyk') {
                    script {
                        withCredentials([string(credentialsId: 'mtf-pm-snyk-token', variable: 'SNYK_TOKEN')]) {
                            echo "üì° Sending insecure template to Snyk monitoring"
                       
                            sh """
                                snyk auth $SNYK_TOKEN
                                snyk iac monitor ${env.INSECURE_TEMPLATE} --project-name="mtf-pm-cfn-insecure-template-${env.BUILD_NUMBER}"
                            """
                       
                            echo "‚úÖ Insecure template added to Snyk monitoring"
                        }   
                    }
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'insecure-report.*', allowEmptyArchive: true
        }
        failure {
            echo "üî• Pipeline failed as expected - insecure template contains issues"
        }
    }
}
