pipeline {
    agent {
        kubernetes {
            yaml """
            apiVersion: v1
            kind: Pod
            metadata:
              labels:
                app: jenkins-agent-secure
            spec:
              containers:
              - name: jnlp
                image: jenkins/inbound-agent:latest
                workingDir: /home/jenkins/agent
              - name: snyk
                image: snyk/snyk-cli:latest
                command: ["/bin/sh", "-c"]
                args: ["sleep infinity"]
                workingDir: /home/jenkins/agent
                volumeMounts:
                  - name: workspace
                    mountPath: /home/jenkins/agent
              volumes:
                - name: workspace
                  emptyDir: {}
"""
        }
    }
   
    environment {
        SNYK_TOKEN = credentials('mtf-pm-snyk-token')
        SECURE_TEMPLATE = 'secure-template.yaml'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                echo "üì• Checked out repository for SECURE template scanning"
            }
        }

        stage('Validate Secure Template') {
            steps {
                script {
                    if (!fileExists(env.SECURE_TEMPLATE)) {
                        error("‚ùå Secure template ${env.SECURE_TEMPLATE} not found in repository")
                    }
                    echo "‚úÖ Secure template found: ${env.SECURE_TEMPLATE}"
                }
            }
        }

        stage('Snyk Security Scan - Secure Template') {
            steps {
                container('snyk') {
                    script {
                        echo "üîç Starting Snyk security scan for SECURE template"
                       
                        sh """
                            snyk auth ${SNYK_TOKEN}
                            echo "Authenticated with Snyk successfully"
                           
                            echo "Scanning ${env.SECURE_TEMPLATE} for security vulnerabilities..."
                            snyk iac test ${env.SECURE_TEMPLATE} --severity-threshold=high
                        """
                    }
                }
            }
        }

        stage('Generate Security Report') {
            steps {
                container('snyk') {
                    script {
                        echo "üìä Generating detailed security reports"
                       
                        sh """
                            snyk auth ${SNYK_TOKEN}
                           
                            # Generate JSON report
                            snyk iac test ${env.SECURE_TEMPLATE} --json-file-output=secure-template-report.json || true
                           
                            # Generate SARIF report
                            snyk iac test ${env.SECURE_TEMPLATE} --sarif-file-output=secure-template-report.sarif || true
                           
                            echo "Reports generated successfully"
                        """
                    }
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'secure-template-report.*', allowEmptyArchive: true
                }
            }
        }

        stage('Monitor in Snyk') {
            steps {
                container('snyk') {
                    script {
                        echo "üì° Sending secure template to Snyk monitoring"
                       
                        sh """
                            snyk auth ${SNYK_TOKEN}
                            snyk iac monitor ${env.SECURE_TEMPLATE} --project-name="mtf-pm-cfn-secure-template-${env.BUILD_NUMBER}"
                        """
                       
                        echo "‚úÖ Secure template added to Snyk monitoring"
                    }
                }
            }
        }
    }

    post {
        success {
            echo "SUCCESS: Secure template pipeline completed successfully"
            echo "No high-severity security vulnerabilities found"
            echo "Security reports have been archived"
        }
        failure {
            echo "FAILURE: Secure template pipeline failed"
            echo "This indicates the secure template may have security issues that need attention"
        }
    }
}